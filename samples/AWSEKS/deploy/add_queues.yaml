apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: initc-pvc
  namespace: ibm-mq-ns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: gp2
---
apiVersion: batch/v1
kind: Job
metadata:
  name: add-queues
  namespace: ibm-mq-ns
spec:
  template:
    spec:
      securityContext:
        fsGroup: 1001   # ðŸ‘ˆ This enables MQM user access to mounted PVCs
      containers:
      - name: mq-admin
        image: icr.io/ibm-messaging/mq:9.4.2.0-r1
        command: ["/bin/bash", "-c"]
        args: # ðŸ‘ˆ This is creating a QM in a remote QM MTLSQMCHL/TCP/secureapphelm-ibm-mq.ibm-mq-ns.svc.cluster.local(1414)
          - |
            crtmqm TEST
            /opt/mqm/bin/dspmq 
            echo "DEFINE QLOCAL('APPQ') DEFPSIST(YES)" | runmqsc -c SECUREAPP
        env:
        - name: LICENSE
          value: accept
        - name: MQSERVER
          value: "MTLSQMCHL/TCP/secureapphelm-ibm-mq.ibm-mq-ns.svc.cluster.local(1414)"  
        volumeMounts:
        - name: qm-volume
          mountPath: /var/mqm/qmgrs
      restartPolicy: Never
      volumes:
      - name: qm-volume
        persistentVolumeClaim:
          claimName: initc-pvc